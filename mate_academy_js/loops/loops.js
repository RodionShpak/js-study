// Цикли
// Часто у своїх програмах тобі потрібно буде повторювати ті самі команди кілька разів.Для цього використовуються цикли.

// У цьому уроці ми розглянемо цикли for, while та do while, а також розберемо приклади їх використання.

// Цикл for
// Розгляньмо такий приклад:

//     for (let age = 3; age < 10; age = age + 1) {
//         // цей рядок виконається 7 разів для age від 3 до 9
//         console.log(`My age is ${age}`);
//     }
// Де:

// let age = 3 — стартова команда, яка виконується лише один раз перед початком циклу;
// age < 10 — умова, яка перевірятиметься перед кожною ітерацією(виконанням тіла) циклу.Якщо вона істинна(true), то виконається наступна ітерація;
// age = age + 1 — команда, яка виконуватиметься після кожної ітерації циклу.
// У консолі ми побачимо:

// My age is 3
// My age is 4
// My age is 5
// My age is 6
// My age is 7
// My age is 8
// My age is 9
// Скорочене присвоєння
// Команду age = age + 1 можна записати за допомогою операції скороченого присвоєння — age += 1.

// При цьому збільшувати значення можна на будь - яке число, наприклад:

// age += 1; // age = age + 1;
// age += 10; // age = age + 10;
// Скорочене присвоєння можна використовувати й для інших арифметичних операцій:

// age -= 5; // age = age - 5;
// age *= 5; // age = age * 5;
// age /= 5; // age = age / 5;
// age %= 5; // age = age % 5;
// Найчастіше число в циклі збільшують або зменшують на 1, і тому ці операції можна записати ще так:

// age++; // age += 1;
// age--; // age -= 1;
// Зверни увагу: операція++ називається інкрементом, а-- — декрементом.

// Фіксована кількість повторень
// Цикл for часто використовують, щоби повторити якусь команду задану кількість разів.

// Розглянемо приклад:

// for (let i = 0; i < 3; i++) {
//     console.log('Ця команда виконається 3 рази');
//     console.log(i);
// }
// У консолі побачимо такий результат:

// Ця команда виконається 3 рази
// 0

// Ця команда виконається 3 рази
// 1

// Ця команда виконається 3 рази
// 2
// Зверни увагу: змінну циклу часто називають i від слова index — покажчик.

// Як працює цикл
// А тепер покроково розберемо, як відбувається виконання циклу.Погляньмо на попередній приклад:

// Спочатку виконується команда let i = 0.
// Далі перевіряється умова i < 3(0 < 3) — true.
// Виконується тіло циклу console.log(i); при i === 0.
// Виконується команда i++ (тепер i === 1).
// Знову перевіряється умова i < 3(1 < 3) — true.
// Виконується тіло циклу console.log(i); при i === 1.
// Виконується команда i++ (тепер i === 2).
// Знову перевіряється умова i < 3(2 < 3) — true.
// Виконується тіло циклу console.log(i); при i === 2.
// Виконується команда i++ (тепер i === 3).
// Перевіряється умова i < 3(3 < 3) — false.
// Цикл завершено.
// Перебір у зворотному напрямку
// Іноді буває зручно розпочати перебір з кінця.Розглянемо приклад:

// for (let i = 3; i > 0; i--) {
//     console.log(i);
// }
// У консолі ми побачимо:

// 3
// 2
// 1
// Зверни увагу: у цьому прикладі ми зберегли 3 у змінну циклу let i = 3, і після кожної ітерації циклу ми зменшуємо її значення на 1, а не збільшуємо.

// Цикл із кроком
// Також ми можемо створювати цикли із кроком.Це означає, що після кожної ітерації i змінюється не на 1, а на інше задане значення.Розглянемо приклад:

// // збільшуємо значення i на 10, починаючи з 5
// for (let i = 5; i < 30; i += 10) {
//     console.log(i);
// }
// У консолі ми отримаємо такий результат:

// 5
// 15
// 25
// Інший приклад:

// // збільшуємо значення i в 3 рази
// for (let i = 1; i < 30; i *= 3) {
//     console.log(i);
// }
// У консолі ми отримаємо такий результат:

// 1
// 3
// 9
// 27
// Сума чисел від 1 до n
// За допомогою циклу можна підсумувати числа.Наприклад:

// const n = 5;
// let sum = 0;

// for (let i = 1; i <= n; i++) {
//     sum += i; // 1 + 2 + 3 + 4 + 5
// }

// console.log(sum); // 15
// Цикл while
// Іноді ми не знаємо заздалегідь, скільки разів потрібно виконати ту чи іншу команду.Наприклад, при розрахунку залишку від ділення.

// У таких випадках ми можемо скористатися циклом while, який буде виконуватися, поки умова дорівнює true.

// Розглянемо приклад:

// let startValue = 22;
// let value = startValue;

// while (value >= 5) {
//     value -= 5; // 17, 12, 7, 2
// }

// let reminder = value; // 2
// Тут value >= 5 — це умова.Якщо вона true, то виконається тіло циклу.

// Цикл do while
// Якщо нам потрібно перевіряти умову після першої ітерації, а не до, то підійде цикл із постумовою do while.

// Він подібний до циклу while, але перевіряє умову вже після виконання тіла циклу.

//     Наприклад:

// let i = 0;

// do {
//     console.log(i);
//     i++;
// } while (i < 3)
// У консолі ми побачимо:

// 0
// 1
// 2
// Розглянемо ще один приклад:

// let i = 7;

// do {
//     console.log(i);
//     i++;
// } while (i < 3)
// На відміну від циклу while (i < 3), цей код надрукує 7 і лише потім завершиться, оскільки умова не істинна.

// На практиці цикл do while використовується вкрай рідко.