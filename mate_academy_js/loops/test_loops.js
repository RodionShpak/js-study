// ###########################################################################################################################################################

// // ==========================================Task-1

// Як написати цикл, який обчислює суму чисел від 1 до 4 включно ?

//     Код :

// for (let i = 1; i <= 4; i = i + 1) {
//     let sum = 0;
//     sum += i;
// }

// Код:

// let sum = 0;
// for (let i = 1; i <= 4; i = i + 4) {
//     sum += i;
// }

// Код:

// let sum = 0;
// for (let i = 1; i <= 4; i = i + 1) {
//     sum += 4;
// }

// Код:                                                 V

// let sum = 0;
// for (let i = 1; i <= 4; i = i + 1) {
//     sum += i;
// }

// Пояснення правильного варіанту:
// Правильний варіант:

// let sum = 0;
// for (let i = 1; i <= 4; i = i + 1) {
//     sum += i;
// }

// Ось як працює цей код:
// 1. 'let sum = 0' виконується: тепер у нас є змінна 'sum', де ми будемо зберігати результат на кожній ітерації
// 2. 'let i = 1' виконується;
// 3. потім перевіряється умова 'i <= 4'('1 <= 4' - вірно);
// 4. виконується тіло циклу { sum += i }; змінна 'sum' збільшується на i, тому sum = 0 + 1 = 1;
// 5. виконується крок циклу 'i = i + 1'(тепер i дорівнює 2);
// 6. знову перевіряємо умову 'i <= 4'('2 <= 4' - вірно);
// 7. виконується тіло циклу { sum += i }; змінна 'sum' збільшується на i, отже sum = 1 + 2 = 3;
// 8. виконується крок циклу 'i = i + 1'(тепер i дорівнює 3);
// 9. знову перевіряємо умову 'i <= 4'('3 <= 4' - вірно);
// 10. виконується тіло циклу { sum += i }; змінна 'sum' збільшується на i, отже sum = 3 + 3 = 6;
// 11. виконується крок циклу 'i = i + 1'(тепер i дорівнює 4);
// 12. знову перевіряємо умову 'i <= 4'('4 <= 4' - вірно);
// 13. виконується тіло циклу { sum += i }; змінна 'sum' збільшується на i, отже sum = 6 + 4 = 10;
// 14. виконується крок циклу 'i = i + 1'(тепер i дорівнює 5);
// 15. знову перевіряємо умову 'i <= 4'('5 <= 4' - НЕВІРНО);
// 16. тіло циклу більше НЕ виконується і ми виходимо з циклу;
// 17. кінцеве значення змінної  'sum' дорівнює 10.

// Цикл знаходить суму чисел від 1 до 4 включно: 1 + 2 + 3 + 4 = 10.

// ⛔ Інші варіанти неправильні, тому що:
// - Якщо ми оголошуємо змінну 'sum' всередині циклу, її не можна використовувати за межами циклу,
// і її початкове значення на кожній ітерації завжди дорівнює 0, тому ми не можемо зберігати в ній результат на кожній ітерації.
// - Якщо ми напишемо 'sum += 4' в тілі циклу, змінна 'sum' буде збільшуватися на 4 на кожній ітерації,
//     і ми отримаємо 4 + 4 + 4 + 4 = 16, а не суму чисел від 1 до 4;
// - Якщо ми запишемо 'i = i + 4' в кроці циклу, цикл починається з 1
// і сума буде збільшена на 1 на першій ітерації, але перед другою ітерацією
// i буде збільшено на 4(вона буде дорівнювати 5) і оскільки 5 <= 4 невірно, друга ітерація не відбудеться і ми вийдемо з циклу.

// ###########################################################################################################################################################

// // ==========================================Task-2

// Як написати цикл, який виводитиме в консоль числа від 1 до 3 включно ?

//     Код :

// for (i = 1; i <= 3; i = i + 1) {
//     console.log(i);
// }

// Код:

// for (let i = 1; i < 3; i = i + 1) {
//     console.log(i);
// }

// Код:                                           V

// for (let i = 1; i <= 3; i = i + 1) {
//     console.log(i);
// }

// Код:

// for (i = 1; i < 3; i = i + 1) {
//     console.log(i);
// }

// Пояснення правильного варіанту:
// Правильний варіант:

// for (let i = 1; i <= 3; i = i + 1) {
//     console.log(i);
// }

// Ось як працює цей цикл:
// 1. спочатку виконується 'let i = 1';
// 2. потім перевіряється умова 'i <= 3'('1 <= 3' - вірно);
// 3. виконується тіло циклу { console.log(i) }; 1 виводиться у консоль;
// 4. виконується крок циклу 'i = i + 1'(тепер i дорівнює 2);
// 5. знову перевіряємо умову 'i <= 3'('2 <= 3' - вірно);
// 6. виконується тіло циклу { console.log(i) }; 2 виводиться у консоль;
// 7. виконується крок циклу i = i + 1(тепер i дорівнює 3);
// 8. знову перевіряємо умову 'i <= 3'('3 <= 3' - вірно);
// 9. виконується тіло циклу { console.log(i) }; 3 виводиться у консоль;
// 10. виконується крок циклу i = i + 1(тепер i дорівнює 4);
// 11. знову перевіряємо умову 'i <= 3'('4 <= 3' - НЕВІРНО);
// 12. тіло циклу більше НЕ виконується, і ми виходимо із циклу.

// Цикл виводить числа: 1, 2, 3.

// ⛔ Інші варіанти неправильні, тому що:
// - Якщо ми напишемо 'i = 1' без 'let', Javascript не зрозуміє, що це змінна, і ми отримаємо помилку 'i is not defined'('і не визначено');
// - Якщо ми напишемо 'i < 3' в умові зупинки, 3 не виводитиметься в консоль, тому що '3 < 3' невірно, тому тіло циклу не буде виконано.

// ###########################################################################################################################################################

// // ==========================================Task-3

// Що буде результатом цього коду ?
//     let total = 0;
// for (let i = 1; i <= 3; i++) {
//     total = total + i;
// }
// console.log(total);

// 0 буде виведено в консоль

// 6 буде виведено в консоль                               V

// Числа 1, 2, 3 будуть виведені в консоль

// 3 буде виведено в консоль

// Пояснення правильного варіанту:
// Правильний варіант:

// 6 буде виведено в консоль

// Ось як працює цей код:
// 1. 'let total = 0' виконується: тепер у нас є змінна 'total', де ми будемо зберігати результат на кожній ітерації
// 2. 'let i = 1' виконується;
// 3. потім перевіряється умова 'i <= 3'('1 <= 3' - вірно);
// 4. виконується тіло циклу { total = total + i }; змінна 'total' збільшується на i, тому total = 0 + 1 = 1;
// 5. виконується крок циклу 'i++'(i збільшується на 1 і тепер дорівнює 2);
// 6. знову перевіряємо умову 'i <= 3'('2 <= 3' - вірно);
// 7. виконується тіло циклу { total = total + i }; змінна 'total' збільшується на i, тому total = 1 + 2 = 3;
// 8. виконується крок циклу 'i++'(i збільшується на 1 і тепер дорівнює 3);
// 9. знову перевіряємо умову 'i <= 3'('3 <= 3' - вірно);
// 10. виконується тіло циклу { total = total + i }; змінна 'total' збільшується на i, тому total = 3 + 3 = 6;
// 11. виконується крок циклу 'i++'(i збільшується на 1 і тепер дорівнює 4);
// 12. знову перевіряємо умову 'i <= 3'('4 <= 3' - НЕВІРНО);
// 13. тіло циклу більше НЕ виконується і ми виходимо з циклу;
// 14. 6 виводиться в консоль

// Цикл знаходить суму чисел від 1 до 3 включно: 1 + 2 + 3 = 6 і виводить це значення в консоль.

// ###########################################################################################################################################################

// // ==========================================Task-4

// Як написати цикл, який виводитиме в консоль числа від 0 до 15(15 не включено) з кроком = 5 ?

//     Код :

// for (let i = 0; i <= 15; i + 5) {
//     console.log(i);
// }

// Код:

// for (let i = 0; i <= 15; i = i + 5) {
//     console.log(i);
// }

// Код:

// for (let i = 0; i < 15; i + 5) {
//     console.log(i);
// }

// Код:                                  V

// for (let i = 0; i < 15; i = i + 5) {
//     console.log(i);
// }
// Пояснення правильного варіанту:
// Правильний варіант:

// for (let i = 0; i < 15; i = i + 5) {
//     console.log(i);
// }

// Ось як працює цей цикл:
// 1. спочатку виконується 'let i = 0';
// 2. потім перевіряється умова 'i < 15'('0 < 15' - вірно);
// 3. виконується тіло циклу { console.log(i) }; 0 виводиться в консоль;
// 4. виконується крок циклу 'i = i + 5'(тепер i дорівнює 5);
// 5. знову перевіряємо умову 'i < 15'('5 < 15' - вірно);
// 6. виконується тіло циклу { console.log(i) }; 5 виводиться в консоль;
// 7. виконується крок циклу 'i = i + 5'(тепер i дорівнює 10);
// 8. знову перевіряємо умову 'i < 15'('10 < 15' вірно);
// 9. виконується тіло циклу { console.log(i) }; 10 виводиться в консоль;
// 10. Виконується крок циклу 'i = i + 5'(тепер i дорівнює 15);
// 11. знову перевіряємо умову 'i < 15'('15 < 15' - НЕВІРНО);
// 12. тіло циклу більше НЕ виконується і ми виходимо з циклу.

// Цикл виводить числа: 0, 5, 10.

// ⛔ Інші варіанти неправильні, тому що:
// - Якщо ми запишемо 'i + 5' як крок циклу, Javascript не зрозуміє, що нам потрібно збільшити поточне i на 5,
// і в нас буде нескінченний цикл, оскільки i не буде збільшуватися;
// - Якщо ми напишемо 'i <= 15' в умові зупинки, 15 буде виведено в консоль, тому що '15 <= 15' - вірно, а значить,
// буде виконано тіло циклу. 15 не потрібно включати, тому нам потрібно 'i < 15' в умові зупинки.

// ###########################################################################################################################################################

// // ==========================================Task-5

// Як написати цикл, який виводитиме в консоль числа від 7 до 4 включно ?

// Код :

// for (let i = 4; i <= 7; i--) {
//     console.log(i);
// }

// Код:

// for (let i = 7; i >= 4; i++) {
//     console.log(i);
// }

// Код:                                           V

// for (let i = 7; i >= 4; i--) {
//     console.log(i);
// }

// Код:

// for (let i = 4; i <= 7; i++) {
//     console.log(i);
// }
// Пояснення правильного варіанту:
// Правильний варіант:

// for (let i = 7; i >= 4; i--) {
//     console.log(i);
// }

// Ось як працює цей цикл:
// 1. спочатку виконується 'let i = 7';
// 2. потім перевіряється умова 'i >= 4'('7 >= 4' - вірно);
// 3. виконується тіло циклу { console.log(i) }; 7 виводиться в консоль;
// 4. виконується крок циклу 'i--'(i зменшується на 1, тепер i дорівнює 6);
// 5. знову перевіряємо умову 'i >=4'('6 >= 4' вірно);
// 6. виконується тіло циклу { console.log(i) }; 6 виводиться в консоль;
// 7. виконується крок циклу 'i--'(i зменшується на 1, тепер i дорівнює 5);
// 8. знову перевіряємо умову 'i >=4'('5 >= 4' - вірно);
// 9. виконується тіло циклу { console.log(i) }; 5 виводиться в консоль;
// 10. виконується крок циклу 'i--'(i зменшується на 1, тепер i дорівнює 4);
// 11. знову перевіряємо умову 'i >=4'('4 >= 4' - вірно);
// 12. виконується тіло циклу { console.log(i) }; 4 виводиться в консоль;
// 13. виконується крок циклу 'i--'(i зменшується на 1, тепер i дорівнює 3);
// 14. знову перевіряємо умову 'i >= 4'('3 >= 4' - НЕВІРНО);
// 15. тіло циклу більше НЕ виконується і ми виходимо з циклу.

// Цикл виводить числа: 7, 6, 5, 4.

// ⛔ Інші варіанти неправильні, тому що:
// - Якщо ми пишемо 'let i = 4; i <= 7; i++', цикл починається з 4 і виводить числа 4, 5, 6, 7;
// у цьому завданні нам потрібно почати з 7 і закінчити 4;
// - Якщо ми пишемо 'let i = 7; i >= 4; i++', цикл починається з 7, і умова зупинки завжди буде вірною(7 >= 4, 8 >= 4, 9 >= 4 тощо);
// отримаємо нескінченний цикл;
// - Якщо ми пишемо 'let i = 4; i <= 7; i--', цикл починається з 4, і умова зупинки завжди буде вірною(4 <= 7, 3 <= 7, 2 <= 7 тощо);
// отримаємо нескінченний цикл.

// ###########################################################################################################################################################

// // ==========================================Task-6

// Що буде результатом цього коду ?
// const m = 5;
// const n = 9;
// for (let i = m; i < n; i++) {
//     console.log(i);
// }

// Числа 5, 6, 7, 8, 9 будуть виведені в консоль

// Числа 6, 7, 8 будуть виведені в консоль

// Числа 5, 6, 7, 8 будуть виведені в консоль                         V

// Числа 6, 7, 8, 9 будуть виведені в консоль

// Пояснення правильного варіанту:
// Правильний варіант:

// Числа 5, 6, 7, 8 будуть виведені в консоль

// Ось як працює цей цикл:
// 1. спочатку виконується 'let i = m', тому i дорівнює 5;
// 2. потім перевіряється умова 'i < n'('5 < 9' - вірно);
// 3. виконується тіло циклу { console.log(i) }; 5 виводиться в консоль;
// 4. виконується крок циклу 'i++'(тепер i дорівнює 6);
// 5. знову перевіряємо умову 'i < n'('6 < 9' - вірно);
// 6. виконується тіло циклу { console.log(i) }; 6 виводиться в консоль;
// 7. виконується крок циклу 'i++'(тепер i дорівнює 7);
// 8. знову перевіряємо умову 'i < n'('7 < 9' - вірно);
// 9. виконується тіло циклу { console.log(i) }; 7 виводиться в консоль;
// 10. виконується крок циклу 'i++'(тепер i дорівнює 8);
// 11. знову перевіряємо умову 'i < n'('8 < 9' - вірно);
// 12. виконується тіло циклу { console.log(i) }; 8 виводиться в консоль;
// 13. виконується крок циклу 'i++'(тепер i дорівнює 9);
// 14. знову перевіряємо умову 'i < n'('9 < 9' - НЕВІРНО);
// 15. тіло циклу більше НЕ виконується і ми виходимо з циклу.

// ###########################################################################################################################################################

// // ==========================================Task-7

// Вибери усі можливі способи запису кроку циклу 'i = i + 1':

// i += 1                    V

// i++ 1

// i + 1

// i++                       V

// Пояснення правильного варіанту:
// Правильні варіанти:

// - i++;
// - i += 1;

// Вони обидва збільшують значення змінної 'i' на 1.

// ⛔ Інші варіанти неправильні, тому що:
// - 'i ++ 1' - неправильний синтаксис: Javascript не зрозуміє, чому після '++' стоїть число,
//     і ми отримаємо помилку 'Unexpected number'('Неочікуване число');
// - Якщо ми запишемо 'i + 1' як крок циклу, Javascript не зрозуміє, що нам потрібно збільшити поточний i на 1,
//     і ми отримаємо нескінченний цикл, оскільки i не буде збільшено;
// Щоб записати крок циклу, нам потрібно присвоїти нове значення i: 'i = i + 1'.

// ###########################################################################################################################################################

// // ==========================================Task-8

// // --------------------===================== Сonditions --------------------=====================

// Функція printNumbers повинна виводити в консоль числа від start до end включно.
// Але зараз вона містить нескінченний цикл та при виклику видає помилку Task timed out(Час очікування задачі вичерпано).
// Це відбувається, тому що умова виходу з цього циклу ніколи не виконується, і i <= end завжди вірно.
// Зможеш додати крок циклу, щоб виправити це ?

// // --------------------===================== Result --------------------=====================
// Before
// function printNumbers(start, end) {
//     for (let i = start; i <= end;) {
//         console.log(i);
//     }
// }

// After
// function printNumbers(start, end) {
//     for (let i = start; i <= end; i++) {
//         console.log(i);
//     }
// }

// ###########################################################################################################################################################

// // ==========================================Task-9

// // --------------------===================== Сonditions --------------------=====================

// Доповни код у редакторі так, щоб він виводив у консоль числа від 1 до N включно.

// Підказка: тобі треба дописати умову зупинки циклу /* stop condition */ замість коментаря.

// Якщо у завданнях із циклами ти отримуєш помилку 'The execution time limit has been reached'
// Це означає, що у тебе нескінченний цикл.Перевір початкове значення, умову зупинки і крок циклу ще раз.

// // --------------------===================== Result --------------------=====================

// Before
// function printNumbers(N) {
//     for (let i = 1; /* stop condition */; i++) {
//         console.log(i);
//     }
// }

// After

// function printNumbers(N) {
//     for (let i = 1; i <= N; i++) {
//         console.log(i);
//     }
// }

// ###########################################################################################################################################################

// // ==========================================Task-10

// // --------------------===================== Сonditions --------------------=====================

// Доповни код у редакторі так, щоб він виводив у консоль числа від 1 до N включно, але з кроком step.

//     Наприклад, якщо N = 7, step = 3, код повинен вивести такі числа:
// 1
// 4
// 7
// Підказка: тобі треба дописати початкове значення /* start value */, умову зупинки циклу /* stop condition */
// та крок циклу /* loop step */ замість коментарів.

// Якщо у завданнях із циклами ти отримуєш помилку 'The execution time limit has been reached'
// Це означає, що у тебе нескінченний цикл.Перевір початкове значення, умову зупинки і крок циклу ще раз.

// // --------------------===================== Result --------------------=====================

// Before

// function printNumbersWithStep(N, step) {
//     for (/* start value */; /* stop condition */; /*loop step*/) {
//         console.log(i);
//     }
// }

// After

// function printNumbersWithStep(N, step) {
//     for (let i = 1; i <= N; i += step) {
//         console.log(i);
//     }
// }

// ###########################################################################################################################################################

// // ==========================================Task-11

// // --------------------===================== Сonditions --------------------=====================

// Реалізуй функцію printNumbersBackwards, яка приймає додатне число N і виводить в консоль числа від N до 1 включно.

//     Наприклад, якщо N = 5, функція повинна вивести такі числа:
// 5
// 4
// 3
// 2
// 1
// Підказка: тобі потрібно створити цикл, який починається з N і закінчується 1, тому i має зменшуватися на 1 в кроці циклу.

// Якщо у завданнях із циклами ти отримуєш помилку 'The execution time limit has been reached'
// Це означає, що у тебе нескінченний цикл.Перевір початкове значення, умову зупинки і крок циклу ще раз.

// // --------------------===================== Result --------------------=====================

// Before

// function printNumbersBackwards(N) {
//     // write code here
// }

// After

// function printNumbersBackwards(N) {
//     for (let i = N; i >= 1; i--)
//         console.log(i);
// }

// ###########################################################################################################################################################

// // ==========================================Task-12

// // --------------------===================== Сonditions --------------------=====================

// Одного разу тамада на весіллі вирішив розважити гостей, і встановив правило: як тільки приходить новий гість, кожен п'є по одній порції випивки!

// Давай допоможемо тамаді порахувати, скільки порцій випивки потрібно приготувати, і напишемо функцію getDrinks.
// Вона приймає ціле число numberOfGuests і повертає необхідну кількість порцій випивки, щоб вистачило усім гостям.

//     Наприклад, якщо numberOfGuests = 3, то знадобиться:

// 1 порція, коли прийде перший гість;
// ще 2, коли прийде другий;
// і ще 3, коли прийде третій.
//     Всього 1 + 2 + 3 = 6 порцій.

//         Приклади:

// getDrinks(3) === 6 // (1 + 2 + 3);
// getDrinks(0) === 0 // нема гостей - нема випивки;
// getDrinks(5) === 15 // (1 + 2 + 3 + 4 + 5);
// Підказка 1
// У функції створи змінну, яка зберігатиме суму необхідних порцій для гостей(наприклад, sum)
// Створи цикл for від 1 до numberOfGuests
// На кожній ітерації циклу збільшуй sum на поточну кількість гостей
// Після циклу поверни змінну, яка була створена на початку(sum)
// Підказка 2
// Розділ Підсумувати числа від 1 до n в теорії під відео допоможе тобі написати такий цикл.

// // --------------------===================== Result --------------------=====================

// Before

// /**
//  * @param {number} numberOfGuests
//  *
//  * @returns {number}
//  */
// function getDrinks(numberOfGuests) {
//     // write code here
// }

// After

// function getDrinks(numberOfGuests) {
//     let sum = 0;
//     for (let i = 1; i <= numberOfGuests; i++)
//         sum += i;
//     return sum;
// }

// ###########################################################################################################################################################

// // ==========================================Task-13

// // --------------------===================== Сonditions --------------------=====================

// Ведучий вирішив трохи змінити правила попередньої розваги.Молодята обирають число step, і тепер тост промовляє не кожен гість,
//     а лише перший і кожен наступний, який приходить через обрану кількість гостей.Наприклад:

// якщо step = 1, то, як і раніше, тост говорить кожен гість;
// якщо step = 2, то 1 - ий, 3 - ій, 5 - ий ...
// якщо step = 3, то 1, 4, 7, 10 ...
// Напиши функцію getDrinksWithStep, яка приймає numberOfGuests і step та повертає кількість чарок, яку треба підготувати для конкурса.

//     Приклади:

// getDrinksWithStep(10, 3) === 22 // (1 + 4 + 7 + 10);
// getDrinksWithStep(0) === 0 // нема гостей - нема випивки;
// getDrinksWithStep(5, 3) === 5 // (1 + 4);
// getDrinksWithStep(18, 10) === 12 // (1 + 11);
// Підказка 1
// У функції створи змінну, яка зберігатиме суму необхідних порцій для гостей(наприклад, sum)
// Створи цикл for від 1 до numberOfGuests з кроком циклу = step
// На кожній ітерації циклу збільшуй sum на поточну кількість гостей
// Після циклу поверни змінну, яка була створена на початку(sum)
// Підказка 2
// Розділ Перебір з іншими параметрами в теорії під відео допоможе тобі написати такий цикл.

// // --------------------===================== Result --------------------=====================

// Before

// /**
//  * @param {number} numberOfGuests
//  * @param {number} step
//  *
//  * @returns {number}
//  */
// function getDrinksWithStep(numberOfGuests, step) {
//     // write code here
// }

// After

// function getDrinksWithStep(numberOfGuests, step) {
//     let sum = 0;
//     for (let i = 1; i <= numberOfGuests; i += step)
//         sum += i;
//     return sum;
// }

// ###########################################################################################################################################################

// // ==========================================Task-14

// // --------------------===================== Сonditions --------------------=====================

// В Mate bank є можливість покласти гроші на депозит під певний відсоток і отримати прибуток через деякий час.

//     Наприклад, якщо покласти 10000 на 3 роки під 4 % річних, отримаємо:

// Перший рік: 10000 + 4 % = 10400 // 10000 + 10000 * 0.04
// Другий рік: 10400 + 4 % = 10816 // 10400 + 10400 * 0.04
// Третій рік: 10816 + 4 % = 11248.64 // 10816 + 10816 * 0.04

// Чистий прибуток = 11248.64 - 10000 = 1248.64
// Напиши функцію calculateProfit, яка приймає три параметри:

// amount - початкова сума, яку ми кладемо на депозит;
// percent - річна відсоткова ставка;
// period - кількість років(час, на який гроші кладуться на депозит).
// Функція повинна розрахувати і повернути суму чистого прибутку за весь час.

//     Приклади(ми перевіряємо тільки цілу частину):

// calculateProfit(1000, 5, 1) === 50
// calculateProfit(12500, 3, 12) === 5322
// Підказка
// Створи змінну total функції і присвой їй значення amount
// Створи цикл від 0 до period(period не включено)
// На кожній ітерації збільшуй total на total, помножене на percent, поділений на 100
// Поверни різницю між total і amount

// --------------------===================== Result--------------------=====================

// Before

// /**
//  * @param {number} amount
//  * @param {number} percent
//  * @param {number} period
//  *
//  * @returns {number}
//  */
// function calculateProfit(amount, percent, period) {
//     // write code here
// }

// After

// function calculateProfit(amount, percent, period) {
//     let total = amount;
//     for (let i = 0; i < period; i++)
//         total += total * percent / 100;
//     return total - amount;
// }











