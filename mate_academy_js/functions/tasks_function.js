// ==========================================Task-1
// --------------------===================== Умови --------------------=====================
// Оголоси функцію з назвою hello, використовуючи ключове слово function.
// Всередині функції зроби виклик console.log з аргументом 'Hello, world!'
// --------------------===================== Рішення --------------------=====================
// function hello() {
//     console.log('Hello, world!');
// }



// ==========================================Task-2
// --------------------===================== Умови --------------------=====================
// Оголоси функцію getString, яка не приймає ніяких параметрів.
// Всередині функції getString:
// оголоси змінну greeting, використовуючи ключове слово const, присвой їй значення - рядок 'Hello, Mate Academy!'.
// поверни змінну greeting за допомогою ключового слова return.
// --------------------===================== Рішення --------------------=====================
// function getString() {
//     const greeting = `${'Hello, Mate Academy!'}`;
//     return greeting;
// }



// ==========================================Task-3
// --------------------===================== Умови --------------------=====================
// Створи функцію greeter, яка:
// приймає параметр name;
// повертає рядок - привітання такого формату: Hi, ${ name } !(використай ключове слово return).
// Параметр name передається в тестах, тобі не потрібно оголошувати його в коді!
// Приклад:
// Параметр: name = 'Anna'
// greeter(name) // повертає 'Hi, Anna!'
// Ти можеш використати інтерполяцію, записавши рядок Hi, ${ name } !у зворотних лапках.
// Параметр name передається в тестах.
//     Наприклад, якщо в тесті передається рядок 'Helen', цей тест очікує результат 'Hi, Helen!'.
// Але якщо в іншому тесті передається рядок 'Daniel', то такий тест вже буде очікувати результат 'Hi, Daniel!'.
// Не пиши прямо 'Hi, Mike!' або 'Hi, Louis XIV!'.Використовуй параметр name, щоб отримати потрібний рядок.
// --------------------===================== Рішення --------------------=====================
// function greeter(name) {
//     name = `Hi, ${name}!`;
//     return name;
// }



// ==========================================Task-3
// --------------------===================== Умови --------------------=====================
// Створи функцію greeter, яка:
// приймає параметри name та partOfTheDay
// повертає рядок - привітання такого формату:
// Параметри: name = 'Paul', partOfTheDay = 'night'
// greeter(name, partOfTheDay) // повертає рядок 'Good night, Paul!'
// Параметри name та partOfTheDay передаються в тестах, тобі не потрібно оголошувати їх в коді!
// Не забудь додати кому та знак оклику.
//     Підказка
// Ти можеш використати інтерполяцію, записавши рядок Good ${ partOfTheDay }, ${ name } !у зворотних лапках.
// --------------------===================== Рішення --------------------=====================
// function greeter(name, partOfTheDay) {
//     return `Good ${partOfTheDay}, ${name}!`;
// }



// ==========================================Task-4
// --------------------===================== Умови --------------------=====================
// Створи функцію double, яка:
// приймає параметр num;
// повертає значення num, помножене на 2.
// Приклади:
// Параметр: num = 5
// double(num) // повертає 10
// Параметр: num = 24
// double(num) // повертає 48
// --------------------===================== Рішення --------------------=====================
// function double(num) {
//     return (num * 2);
// }



// ==========================================Task-5
// --------------------===================== Умови --------------------=====================
