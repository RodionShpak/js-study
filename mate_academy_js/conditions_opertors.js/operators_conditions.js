// Умовні оператори
// Команди в програмі виконуються послідовно, згори вниз.Але іноді ми хочемо, щоб деякі команди виконувались тільки за певних умов.
// Для цього використовується конструкція if.

// let age = 16;

// console.log('Go to the shop')

// if (age >= 18) {
//     // цей рядок виконається тільки якщо age не менше 18
//     console.log('You can buy alcohol');
// }

// console.log('Come back home');
// Після ключового слова if ми ставимо круглі дужки, в які записуємо умову.
// Далі пишуться фігурні дужки з однією або кількома командами, які спрацюють, лише якщо умова вірна.

// Перевірка декількох умов
// Якщо ми хочемо перевірити декілька умов, можна використовувати if всередині іншого if

// if (isAdult) {
//         if (hasEnoughMoney) {
//             console.log('You can buy alcohol');
//         }
//     }
// Але таку вкладену конструкцію складніше розуміти, оскільки потрібно уважно слідкувати, де дужки відкрились і де закрились.
// Тому зручніше використовувати оператори && і || для об'єднання умов.

// if (isAdult && hasEnoughMoney) {
//     console.log('You can buy alcohol');
// }

// if (hasEnoughCash || hasCreditLimit) {
//     console.log('You can buy candies');
// }
// else
// Іноді потрібно запустити різні команди коли умова виконується і коли умова НЕ виконується.
// Це можна зробити за допомогою 2 - х конструкцій if з протилежними умовами.

//     if(isAdult) {
//     console.log('Виконається, тільки якщо isAdult вірно');
// }

// if (!isAdult) {
//     console.log('Виконається, тільки якщо isAdult НЕ вірно');
// }
// Але є і коротший спосіб зробити те ж саме - використати ключове слово else.

// if (isAdult) {
//     console.log('Виконається, тільки якщо isAdult вірно');
// } else {
//     console.log('Виконається, тільки якщо isAdult НЕ вірно');
// }
// else if
// Іноді потрібно розглянути більше двох випадків, тоді можна використати else if з додатковою умовою.

//     if(age >= 18) {
//     console.log('Adult')
// } else if (age >= 10) {
//     // Виконається, якщо умова age >= 18 невірна, але age >= 10 вірна
//     console.log('Teenager')
// } else if (age > 3) {
//     // Виконається, якщо age >= 18 та age >= 10 НЕ вірні, а age > 3 вірно
//     console.log('Child');
// }
// За необхідності в кінці можна додати гілку else, яка спрацює, тільки якщо жодна з умов вище не виконалась.

//     if(age >= 18) {
//     console.log('Adult')
// } else if (age >= 10) {
//     console.log('Teenager')
// } else if (age > 3) {
//     console.log('Child');
// } else {
//     console.log('Baby');
// }
// return всередині if
// Якщо if використовується всередині функції, то іноді можна скористатись ключовим словом return, щоб позбутись else і else if

// function getTitle(age) {
//         if (age >= 18) {
//             return 'Adult';
//             // Якщо age >= 18 спрацювало, то ми виходимо з функції
//         }

//         // Сюди програма дійде, тільки якщо умова age >= 18 не виконалась
//         // Інакше ми б уже вийшли з функції
//         if (age >= 10) {
//             return 'Teenager';
//         }

//         // Сюди ми потрапляємо, тільки якщо не вийшли з функції раніше
//         return 'Child';
//     }
// Умовний(тернарний) оператор
// Іноді ми хочемо в залежності від умови встановити значення змінної.Це можна зробити, використовуючи if і else.

// let message = '';

// if (age >= 18) {
//     message = 'Adult';
// } else {
//     message = 'Not adult';
// }

// console.log(message);
// Але це не дуже зручно

// ми пишемо багато дужок
// ми не можемо використовувати const, бо не зможемо записати нове значення в message
// Для вибору одного з двох значень є умовний оператор, який записується так умова ? значення1 : значення2.
// Якщо умова вірна, то обереться значення1, інакше значення2.

// const message = age >= 18 ? 'Adult' : 'Not adult';

// console.log(message);
// Щоб покращити розуміння, вираз в умові часто беруть в дужки.

// const message = (age >= 18) ? 'Adult' : 'Not adult';

// console.log(message);
// Якщо рядок виходить довгим, можна перенести значення на нові рядки, щоб одразу було видно, де почалось перше значення, а де друге.

// const message = (age >= 18)
//     ? 'You can buy alcohol'
//     : 'You can NOT buy alcohol';

// console.log(message);
// Умовний оператор часто називають тернарним, оскільки це єдиний оператор, в якому використовуються 3 частини.